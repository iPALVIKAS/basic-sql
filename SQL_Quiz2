Question 1 - Write a query to get the first three characters of the first names of all employees.
Sample table: employees

SELECT SUBSTRING(FIRST_NAME,1,3) FROM employees;

Question 2 - Write a SQL statement to create a table job_history including columns employee_id, start_date, end_date, job_id, and department_id and make sure that, the employee_id column does not contain any duplicate value at the time of insertion and the foreign key column job_id contain only those values which exist in the jobs table.

CREATE TABLE job_history ( 
EMPLOYEE_ID decimal(6,0) NOT NULL PRIMARY KEY, 
START_DATE date NOT NULL, 
END_DATE date NOT NULL, 
JOB_ID varchar(10) NOT NULL, 
DEPARTMENT_ID decimal(4,0) DEFAULT NULL, 
FOREIGN KEY (job_id) 
REFERENCES jobs(job_id) )
ENGINE=InnoDB;

Question 3 - Write a SQL statement to create a table named jobs including columns job_id, job_title, min_salary, and max_salary, and make sure that, the default value for job_title is blank and min_salary is 8000 and max_salary is NULL will be entered automatically at the time of insertion if no value assigned for the specified columns.

CREATE TABLE IF NOT EXISTS jobs ( 
JOB_ID varchar(10) NOT NULL UNIQUE, 
JOB_TITLE varchar(35) NOT NULL DEFAULT ' ', 
MIN_SALARY decimal(6,0) DEFAULT 8000, 
MAX_SALARY decimal(6,0) DEFAULT NULL );


Question 4 - Write a query to display the last name of employees having 'e' as the third character.
Sample table: employees

SELECT LAST_NAME 
FROM employees
WHERE last_name LIKE '__e%';

Question 5 - Write a query to list the department ID and name of all the departments where no employee is working.
Sample table: employees

SELECT * 
FROM departments
WHERE department_id NOT IN (select distinct department_id FROM employees);

Question 6 - Write a query to get the monthly salary (round 2 decimal places) of each and every employee (include employee first and lastname)
Note: Assume the salary field provides the 'annual salary' information.
Sample table: employees

SELECT FIRST_NAME, LAST_NAME, round(salary/12,2) as Employee_Monthly_Salary
FROM employees;

Question 7 - Write a query to calculate 171*214+625.
SELECT 171*214+625 as Calculation_Result;

Question 8 - Write a query to display the first name and salary for all employees. Format the salary to be 10 characters long, left-padded with the $ symbol. Label the column SALARY.
Sample table: employees

SELECT first_name, LPAD(salary, 10, '$') SALARY
FROM employees;

Question 9 - Write a query to get the average salary for all departments employing more than 10 employees.
Sample table: employees

SELECT DEPARTMENT_ID, AVG(SALARY) as Average_Salary, COUNT(*) as Employee_Count
FROM employees
GROUP BY 1
HAVING Employee_Count > 10;

Question 10 - Write a query to display the name (first_name, last_name), salary, and PF (15% of salary) of all employees.
Sample table: employees

SELECT FIRST_NAME, LAST_NAME, SALARY, SALARY * .15 as  PF
from employees;


Question 11 - Write a SQL statement to create a duplicate copy of the countries table including structure and data by name dup_countries.

CREATE TABLE IF NOT EXISTS dup_countries AS
SELECT * FROM countries;

Question 12 - Write a SQL statement change the data type of the column country_id to integer in the table locations.

ALTER TABLE locations MODIFY country_id INT;


Question 13 - Write a query to get the department ID, year, and the number of employees joined.
Sample table: employees

SELECT DEPARTMENT_ID, DATE_FORMAT(HIRE_DATE,'%Y') as Hire_Year, COUNT(EMPLOYEE_ID) as Employee_Count
FROM employees
GROUP BY 1,2
ORDER BY 1,2;

Question 14 - Write a query to display the first name, last name, hire date, the salary of the manager for all managers whose experience is more than 15 years.
Sample table: employees

SELECT FIRST_NAME, LAST_NAME, HIRE_DATE, SALARY, (DATEDIFF(now(), HIRE_DATE))/365 Experience
FROM departments d
JOIN employees e
ON (d.MANAGER_ID = e.EMPLOYEE_ID)
WHERE (DATEDIFF(now(), HIRE_DATE))/365>15;

Question 15 - Write a SQL statement to change the salary of an employee to 8000 whose ID is 105, if the existing salary is less than 5000.

UPDATE employees SET SALARY = 8000
WHERE employee_id = 105 AND salary < 5000;

Question 16 - Write a SQL statement insert rows from country_new table to countries table.

INSERT INTO countries SELECT * FROM country_new;

